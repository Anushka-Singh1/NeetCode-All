QUESTION: Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

SOLUTION: 
1) BRUTE FORCE

class Solution {
public:
    bool containsDuplicate(std::vector<int>& nums) {
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] == nums[j]) {
                    return true;
                }
            }
        }
        return false;
    }
};

NOTE: The time limit exceeds with brute force approach, to make it more efficient we use set

 2) USING SETS

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int>seen;    //One way to do this is by using a hash set (unordered_set in C++) 
        for(int num:nums){
            if(seen.find(num)!=seen.end()){
            return true;
            }
            seen.insert(num);  
        }
       return false; 
    }
};
